// Generates a TypeScript module with the Riot API key at build time.
// WARNING: Any embedded key can be extracted from the distributed app.
// This only raises the bar slightly by storing it in a separate module and
// optional light obfuscation.

const fs = require('fs');
const path = require('path');

const KEY = process.env.RIOT_API_KEY || '';
const REGION = process.env.RIOT_REGION || 'europe';
const PLATFORM = process.env.RIOT_PLATFORM || 'euw1';

if (!KEY) {
  console.error('[embed-riot-key] RIOT_API_KEY missing in environment.');
  process.exit(1);
}

// Light transform (base64) - trivial to reverse; just avoids casual grepping.
const b64 = Buffer.from(KEY, 'utf8').toString('base64');

const outPath = path.join(__dirname, '..', 'src', 'main', 'riotSecret.ts');
const contents = `// AUTO-GENERATED. DO NOT EDIT.
// Generated by scripts/embed-riot-key.js during CI build.
// Key is base64 encoded to reduce casual discovery.
export const riotSecret = {
  apiKeyB64: '${b64}',
  region: '${REGION}',
  platform: '${PLATFORM}'
};
export function getRiotApiKey(): string { return Buffer.from(riotSecret.apiKeyB64, 'base64').toString('utf8'); }
`;
fs.writeFileSync(outPath, contents, 'utf8');
console.log('[embed-riot-key] wrote', outPath);
